name: redis

on:
  push:
    branches:
      - master
      - stable
  pull_request:
    branches:
      - master
      - stable

jobs:
  redis_test:
    name: Redis plugin (Go ${{ matrix.go }}, PHP ${{ matrix.php }}, OS ${{matrix.os}})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        php: [ "8.4" ]
        go: [ stable ]
        os: [ "ubuntu-latest" ]

    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v6 # action page: <https://github.com/actions/setup-go>
        with:
          go-version: ${{ matrix.go }}

      - name: Check out code
        uses: actions/checkout@v5

      - name: Init Go modules Cache # Docs: <https://git.io/JfAKn#go---modules>
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Install Go dependencies
        run: go mod download

      - name: Install Redis
        run: |
          sudo apt update
          sudo apt-get install -y lsb-release curl gpg libnss3-tools
          curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
          sudo chmod 644 /usr/share/keyrings/redis-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list
          sudo apt-get update
          sudo apt-get install redis

      - name: Generate TLS certificates
        run: |
          cd tests/certs
          ./get-test-certs.sh

      - name: Run golang tests with coverage
        run: |
          cd tests
          mkdir ./coverage-ci
          redis-server --tls-port 16380 --port 16379 --tls-cert-file certs/server.crt --tls-key-file certs/server.key --tls-ca-cert-file certs/ca.crt --daemonize yes
          sleep 5
          redis-cli -h 127.0.0.1 -p 16380 --cert certs/client.crt --key certs/client.key --cacert certs/ca.crt --tls ping
          go test -timeout 20m -v -race -cover -tags=debug -failfast -coverpkg=$(cat pkgs.txt) -coverprofile=./coverage-ci/redis.out -covermode=atomic storage_plugin_test.go

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ./tests/coverage-ci/redis.out

  codecov:
    name: Upload codecov
    runs-on: ubuntu-latest
    needs:
      - redis_test

    timeout-minutes: 60
    steps:
      - name: Download code coverage results
        uses: actions/download-artifact@v5
      - run: |
          echo 'mode: atomic' > summary.txt
          tail -q -n +2 *.out >> summary.txt
          sed -i '2,${/roadrunner/!d}' summary.txt

      - name: upload to codecov
        uses: codecov/codecov-action@v5 # Docs: <https://github.com/codecov/codecov-action>
        with:
          files: summary.txt
          fail_ci_if_error: false
